// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  name      String
  email     String     @unique
  password  String
  role      Role       @default(READER)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  posts     Post[]
  comments  Comment[]
  likes     PostLike[]
}

enum Role {
  ADMIN
  AUTHOR
  READER
}

model Post {
  id         String     @id @default(uuid())
  title      String
  slug       String     @unique
  content    String
  status     PostStatus @default(DRAFT)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  author     User       @relation(fields: [authorId], references: [id])
  authorId   String
  category   Category   @relation(fields: [categoryId], references: [id])
  categoryId String
  tags       Tag[]      @relation("PostTags")
  comments   Comment[]
  likes      PostLike[]
}

enum PostStatus {
  DRAFT
  PUBLISHED
}

model Category {
  id        String   @id @default(uuid())
  name      String   @unique
  slug      String   @unique
  createdAt DateTime @default(now())
  posts     Post[]
}

model Tag {
  id    String @id @default(uuid())
  name  String @unique
  slug  String @unique
  posts Post[] @relation("PostTags")
}

model Comment {
  id              String    @id @default(uuid())
  content         String
  createdAt       DateTime  @default(now())
  post            Post      @relation(fields: [postId], references: [id])
  postId          String
  user            User?     @relation(fields: [userId], references: [id])
  userId          String?
  parent          Comment?  @relation("CommentThread", fields: [parentCommentId], references: [id])
  parentCommentId String?
  replies         Comment[] @relation("CommentThread")
}

model PostLike {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}
